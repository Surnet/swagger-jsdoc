// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpenAPI examples Example: api-with-examples 1`] = `
Object {
  "components": Object {},
  "info": Object {
    "title": "Sample specification testing api-with-examples",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/": Object {
      "get": Object {
        "operationId": "listVersionsv2",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "examples": Object {
                  "foo": Object {
                    "value": Object {
                      "versions": Array [
                        Object {
                          "id": "v2.0",
                          "links": Array [
                            Object {
                              "href": "http://127.0.0.1:8774/v2/",
                              "rel": "self",
                            },
                          ],
                          "status": "CURRENT",
                          "updated": "2011-01-21T11:33:21Z",
                        },
                        Object {
                          "id": "v3.0",
                          "links": Array [
                            Object {
                              "href": "http://127.0.0.1:8774/v3/",
                              "rel": "self",
                            },
                          ],
                          "status": "EXPERIMENTAL",
                          "updated": "2013-07-23T11:33:21Z",
                        },
                      ],
                    },
                  },
                },
              },
            },
            "description": "200 response",
          },
          "300": Object {
            "content": Object {
              "application/json": Object {
                "examples": Object {
                  "foo": Object {
                    "value": "{
 \\"versions\\": [
       {
         \\"status\\": \\"CURRENT\\",
         \\"updated\\": \\"2011-01-21T11:33:21Z\\",
         \\"id\\": \\"v2.0\\",
         \\"links\\": [
             {
                 \\"href\\": \\"http://127.0.0.1:8774/v2/\\",
                 \\"rel\\": \\"self\\"
             }
         ]
     },
     {
         \\"status\\": \\"EXPERIMENTAL\\",
         \\"updated\\": \\"2013-07-23T11:33:21Z\\",
         \\"id\\": \\"v3.0\\",
         \\"links\\": [
             {
                 \\"href\\": \\"http://127.0.0.1:8774/v3/\\",
                 \\"rel\\": \\"self\\"
             }
         ]
     }
 ]
}
",
                  },
                },
              },
            },
            "description": "300 response",
          },
        },
        "summary": "List API versions",
      },
    },
  },
  "tags": Array [],
}
`;

exports[`OpenAPI examples Example: callback 1`] = `
Object {
  "components": Object {},
  "info": Object {
    "title": "Sample specification testing callback",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/streams": Object {
      "post": Object {
        "callbacks": Object {
          "onData": Object {
            "{$request.query.callbackUrl}/data": Object {
              "post": Object {
                "requestBody": Object {
                  "content": Object {
                    "application/json": Object {
                      "schema": Object {
                        "properties": Object {
                          "timestamp": Object {
                            "format": "date-time",
                            "type": "string",
                          },
                          "userData": Object {
                            "type": "string",
                          },
                        },
                      },
                    },
                  },
                  "description": "subscription payload",
                },
                "responses": Object {
                  "202": Object {
                    "description": "Your server implementation should return this HTTP status code
if the data was received successfully
",
                  },
                  "204": Object {
                    "description": "Your server should return this HTTP status code if no longer interested
in further updates
",
                  },
                },
              },
            },
          },
        },
        "description": "subscribes a client to receive out-of-band data",
        "parameters": Array [
          Object {
            "description": "the location where data will be sent.  Must be network accessible
by the source server
",
            "in": "query",
            "name": "callbackUrl",
            "required": true,
            "schema": Object {
              "example": "https://tonys-server.com",
              "format": "uri",
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "201": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "description": "subscription information",
                  "properties": Object {
                    "subscriptionId": Object {
                      "description": "this unique identifier allows management of the subscription",
                      "example": "2531329f-fb09-4ef7-887e-84e648214436",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "subscriptionId",
                  ],
                },
              },
            },
            "description": "subscription successfully created",
          },
        },
      },
    },
  },
  "tags": Array [],
}
`;

exports[`OpenAPI examples Example: links 1`] = `
Object {
  "components": Object {
    "links": Object {
      "UserRepositories": Object {
        "operationId": "getRepositoriesByOwner",
        "parameters": Object {
          "username": "$response.body#/username",
        },
      },
    },
    "schemas": Object {
      "user": Object {
        "properties": Object {
          "username": Object {
            "type": "string",
          },
          "uuid": Object {
            "type": "string",
          },
        },
        "type": "object",
      },
    },
  },
  "info": Object {
    "title": "Sample specification testing links",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/users/{username}": Object {
      "get": Object {
        "operationId": "getUserByName",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/user",
                },
              },
            },
            "description": "The User",
            "links": Object {
              "userRepositories": Object {
                "$ref": "#/components/links/UserRepositories",
              },
            },
          },
        },
      },
    },
  },
  "tags": Array [],
}
`;

exports[`OpenAPI examples Example: petstore 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "Error": Object {
        "properties": Object {
          "code": Object {
            "format": "int32",
            "type": "integer",
          },
          "message": Object {
            "type": "string",
          },
        },
        "required": Array [
          "code",
          "message",
        ],
      },
      "Pet": Object {
        "properties": Object {
          "id": Object {
            "format": "int64",
            "type": "integer",
          },
          "name": Object {
            "type": "string",
          },
          "tag": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "name",
        ],
      },
      "Pets": Object {
        "items": Object {
          "$ref": "#/components/schemas/Pet",
        },
        "type": "array",
      },
    },
  },
  "info": Object {
    "title": "Sample specification testing petstore",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/pets": Object {
      "get": Object {
        "operationId": "listPets",
        "parameters": Array [
          Object {
            "description": "How many items to return at one time (max 100)",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": Object {
              "format": "int32",
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/Pets",
                },
              },
            },
            "description": "A paged array of pets",
            "headers": Object {
              "x-next": Object {
                "description": "A link to the next page of responses",
                "schema": Object {
                  "type": "string",
                },
              },
            },
          },
          "default": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "unexpected error",
          },
        },
        "summary": "List all pets",
        "tags": Array [
          "pets",
        ],
      },
      "post": Object {
        "operationId": "createPets",
        "responses": Object {
          "201": Object {
            "description": "Null response",
          },
          "default": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "unexpected error",
          },
        },
        "summary": "Create a pet",
        "tags": Array [
          "pets",
        ],
      },
    },
    "/pets/{petId}": Object {
      "get": Object {
        "operationId": "showPetById",
        "parameters": Array [
          Object {
            "description": "The id of the pet to retrieve",
            "in": "path",
            "name": "petId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/Pets",
                },
              },
            },
            "description": "Expected response to a valid request",
          },
          "default": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/Error",
                },
              },
            },
            "description": "unexpected error",
          },
        },
        "summary": "Info for a specific pet",
        "tags": Array [
          "pets",
        ],
      },
    },
  },
  "tags": Array [],
}
`;
