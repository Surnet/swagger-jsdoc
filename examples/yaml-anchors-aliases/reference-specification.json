{
  "info": { "title": "Example with anchors and aliases", "version": "0.0.1" },
  "swagger": "2.0",
  "paths": {
    "/aws": {
      "get": {
        "summary": "sample aws-specific route",
        "description": "contains a reference outside this file, and pulls response params from multiple files.",
        "security": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "integer", "description": "The user ID." },
                "username": {
                  "type": "string",
                  "description": "The user name.",
                  "minimum": 1,
                  "maximum": 30
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "object",
          "x-amazon-apigateway-integration": {
            "httpMethod": "POST",
            "passthroughBehavior": "when_no_match",
            "type": "aws_proxy",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:123456789:function:helloworldlambda/invocations"
          }
        },
        "x-second-integration": {
          "type": "object",
          "x-amazon-apigateway-integration": {
            "httpMethod": "GET",
            "passthroughBehavior": "when_no_match",
            "type": "aws_proxy",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:123456789:function:helloworldlambda/invocations"
          }
        }
      },
      "post": {
        "summary": "sample aws-specific route",
        "description": "contains a reference outside this file, and pulls response params from multiple files.",
        "security": [],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "the request body for a fictional request that re-uses anchors referenced else where",
            "schema": {
              "type": "object",
              "required": ["username", "id"],
              "properties": {
                "username": {
                  "type": "string",
                  "description": "The user name.",
                  "minimum": 1,
                  "maximum": 30
                },
                "id": { "type": "integer", "description": "The user ID." }
              }
            }
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "x-amazon-apigateway-integration": {
          "type": "object",
          "x-amazon-apigateway-integration": {
            "httpMethod": "POST",
            "passthroughBehavior": "when_no_match",
            "type": "aws_proxy",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:123456789:function:helloworldlambda/invocations"
          }
        },
        "x-second-integration": {
          "type": "object",
          "x-amazon-apigateway-integration": {
            "httpMethod": "GET",
            "passthroughBehavior": "when_no_match",
            "type": "aws_proxy",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:123456789:function:helloworldlambda/invocations"
          }
        }
      }
    }
  },
  "definitions": {},
  "responses": {},
  "parameters": {},
  "securityDefinitions": {},
  "tags": []
}
